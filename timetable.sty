%    timetable.sty - The LaTeX timetable stylesheet V1.4
%    original file: http://www.planetk.de/index.php?title=Stundenplan
%
%    Copyright (C) 2007-2009 Pascal Gwosdek
%    Modifications (C) 2008 Daniel Bader
%    Modifications (C) 2010-2012 Thomas Gläßle
%
%    This program is free software; you can redistribute it and/or modify it
%    under the terms of the GNU General Public License as published by the
%    Free Software Foundation; either version 3 of the License, or (at your
%    option) any later version.
%
%    This program is distributed in the hope that it will be useful, but
%    WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
%    Public License for more details.
%
%    You should have received a copy of the GNU General Public License along
%    with this program; if not, see <http://www.gnu.org/licenses/>.
%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{timetable}
\RequirePackage{ifthen, calc, color, intcalc}

%--------------------------------------------------
% Box model:
%   totalwidth =  legendwidth +  canvaswidth
%   totalheight = legendheight + canvasheight
%   
%   canvaswidth =  colcount * slotwidth
%   canvasheight = rowcount * slotheight
%   
%   slotwidth(height) =  2*margin +  eventwidth(height)
%   legenwidth(height) = 2*padding + legendtextwidth(height)
%   eventwidth(height) = 2*padding + eventtextwidth(height)
%
%   legendwidth =                slotwidth  [default]
%   legendheight = legendslots * slotheight [default]
%-------------------------------------------------- 

% Dimensions
\newlength{\@slotwidth}     % width of columns in event area
\newlength{\@slotheight}    % height of slot in event area
\newcounter{@rowcount}      % number of rows in event area
\newcounter{@colcount}      % number of columns in event area
\newlength{\@margin}        % padding between grid and box border in event area
\newlength{\@padding}       % padding between border and text in event area
\newlength{\@bottomspace}   % height of location/lecturer field
\newlength{\@locationwidth} % 

\newlength{\@legendwidth}   % (default calculated)
\newlength{\@legendheight}  % (default calculated)
\newlength{\@canvaswidth}   % (calculated)
\newlength{\@canvasheight}  % (calculated)
\newlength{\@totalwidth}    % (calculated)
\newlength{\@totalheight}   % (calculated)

% Format switches
\newcounter{@printtimestamps}   % 0: none, 1: start, 2: start -- end
\newcounter{@frametype}         % 1: lines, 2: checkerboard
\newcounter{@framevalign}       % 0: top, 1: bottom, 2: center
\newcounter{@tthorizgrid}       % draw horizontal grid
\newcounter{@ttvertgrid}        % draw vertical grid
\newlength{\@ttgridstrength}
\newlength{\@ttlegendgridstrength}
\newlength{\@cornerradius}
\newlength{\@innerborderstrength}
\newlength{\@outerborderstrength}


% Predefines
\setlength{\@slotwidth}{4.3cm}
\setlength{\@slotheight}{0.35cm}
\setcounter{@rowcount}{40}
\setcounter{@colcount}{5}
\setlength{\@margin}{1.0mm}
\setlength{\@padding}{1.0mm}
\setlength{\@bottomspace}{0.2cm}
\setlength{\@legendwidth}{3.5cm}
\setlength{\@legendheight}{3\@slotheight}

\setcounter{@printtimestamps}{0}
\setcounter{@frametype}{2}
\setcounter{@framevalign}{2}
\setcounter{@ttvertgrid}{1}
\setcounter{@tthorizgrid}{1}
\setlength{\@ttgridstrength}{0.1pt}
\setlength{\@ttlegendgridstrength}{1pt}
\setlength{\@cornerradius}{3pt}
\setlength{\@innerborderstrength}{1pt}
\setlength{\@outerborderstrength}{1pt}

\newcommand{\@bottomstyle}  {\scriptsize}               % style of lecturer/location field
\newcommand{\@eventstyle}   {\bfseries}                 % 
\newcommand{\@timestyle}    {\tiny}
\newcommand{\timetablefont} {\sffamily}
\newcommand{\@ttfont}       {\timetablefont\selectfont}


% Preset the colors
\definecolor{ttlegendcolor}     {rgb}{0.8,0.8,0.8}  % legend color 
\definecolor{ttlegendcolor2}    {rgb}{0.7,0.7,0.7}  % legend color2 for stripes
\definecolor{ttlegendfontcolor} {rgb}{0.0,0.0,0.0}
\definecolor{ttouterbordercolor}{rgb}{0.0,0.0,0.0}
\definecolor{ttinnerbordercolor}{rgb}{0.0,0.0,0.0}
\definecolor{ttgridcolor}       {rgb}{0.4,0.4,0.4}     % color of grid in event area



% Event declarations
\newlength{\@startposx}
\newlength{\@startposy}
\newlength{\@eventwidth}
\newlength{\@eventheight}
\newlength{\@eventtextwidth}
\newlength{\@eventtextheight}
\newlength{\@newcolleft}
\newlength{\@newrowtop}
\newlength{\@newcolwidth}
\newlength{\@newrowheight}

% Helpers
\newcounter{@timemarks}
\newcounter{@daymarks}
\newcounter{@hourslot}
\newcounter{@durationslots}
\newcounter{@minutesperslot}
\newcounter{@slotsperhour}
\newlength{\@cornerdiameter}

\newcounter{@day}
\newcounter{@column}
\newcounter{@row}
\newcounter{@hour}
\newcounter{@minute}
\newcounter{@startHour}
\newcounter{@startMinute}
\newcounter{@endHour}
\newcounter{@endMinute}
\newcounter{@hoursset}
\setcounter{@hoursset}{0}
\newcounter{@hourzero}



% setter functions

\newcommand{\settopheight}[1]
{
    \setlength{\@legendheight}{#1\@slotheight}
}

\newcommand{\setframetype}[2][c]
{
    % Set frame type
    \ifthenelse{#2 < 1} {
        \setcounter{@frametype}{1}      % 1 => Lines
    } {
        \ifthenelse{#2 > 2} {
            \setcounter{@frametype}{2}  % 2 => Checkerboard
        } {
            \setcounter{@frametype}{#2}
        }
    }
    % Caption vertical alignment
    \ifthenelse{\equal{#1}{b}}{             % 1 => bottom
        \setcounter{@framevalign}{1}
    } {
        \ifthenelse{\equal{#1}{t}}{
            \setcounter{@framevalign}{0}    % 0 => top
        } {
            \setcounter{@framevalign}{2}    % 2 => center
        }
    }
}

\newcommand{\seteventcornerradius}[1] { \setlength{\@cornerradius}{#1} }
\newcommand{\setprinttimestamps}[1] { \setcounter{@printtimestamps}{#1} }
\newcommand{\setbottomstyle}[1] { \renewcommand{\@bottomstyle}{#1} } 
\newcommand{\seteventstyle}[1] { \renewcommand{\@eventstyle}{#1} } 
\newcommand{\settimestyle}[1] { \renewcommand{\@timestyle}{#1} }
\newcommand{\setbottomspace}[1] { \setlength{\@bottomspace}{#1} } 

% \fmttime{hour}{minute}
\newcommand{\@fmtTime}[2] { \ifthenelse{\value{#1} < 10}{0}{}\arabic{#1}:\ifthenelse{\value{#2} < 10}{0}{}\arabic{#2} }


% \slotevent{x}{y}{duration}{title}{lecturer}{place}{type}{textcolor}
\newcommand{\slotevent}[7] {
    \renewcommand{\baselinestretch}{0.75}\normalsize

    \setlength{\@startposx}{\@slotwidth*(#1)+\@margin}      % left coordinate
    \setlength{\@startposy}{-\@slotheight*(#2+#3)+\@margin} % bottom coordinate
    \setlength{\@eventwidth}{\@slotwidth-2\@margin}         % width
    \setlength{\@eventheight}{#3\@slotheight-2\@margin}     % height

    % colour event box (without corners)
    \addtolength{\@startposx}{\@cornerradius}
    \putrule{\@startposx}{\@startposy}{\@eventwidth-2\@cornerradius}{\@eventheight}{@timetable#7block}
    \addtolength{\@startposx}{-\@cornerradius}
    \addtolength{\@startposy}{\@cornerradius}
    \putrule{\@startposx}{\@startposy}{\@eventwidth}{\@eventheight-2\@cornerradius}{@timetable#7block}
    \addtolength{\@startposy}{-\@cornerradius}

    % draw rounded corners
    \ifthenelse{\strip@pt\@cornerradius > 0}
    {
        \setlength{\@cornerdiameter}{2\@cornerradius}
        % bottom left   [x+r, y+r]
        \addtolength{\@startposx}{\@cornerradius}
        \addtolength{\@startposy}{\@cornerradius}
        \put(\strip@pt\@startposx,\strip@pt\@startposy){\textcolor{@timetable#7block}{\circle*{\strip@pt\@cornerdiameter}}}
        \addtolength{\@startposy}{-\@cornerradius}
        % top left      [x+r, y+w-r]
        \addtolength{\@startposy}{-\@cornerradius+\@eventheight}
        \put(\strip@pt\@startposx,\strip@pt\@startposy){\textcolor{@timetable#7block}{\circle*{\strip@pt\@cornerdiameter}}}
        \addtolength{\@startposy}{\@cornerradius-\@eventheight}
        \addtolength{\@startposx}{-\@cornerradius}
        % bottom right  [x+w-r, y+r]
        \addtolength{\@startposx}{-\@cornerradius+\@eventwidth}
        \addtolength{\@startposy}{\@cornerradius}
        \put(\strip@pt\@startposx,\strip@pt\@startposy){\textcolor{@timetable#7block}{\circle*{\strip@pt\@cornerdiameter}}}
        \addtolength{\@startposy}{-\@cornerradius}
        % top right     [x+w-r, y+w-r]
        \addtolength{\@startposy}{-\@cornerradius+\@eventheight}
        \put(\strip@pt\@startposx,\strip@pt\@startposy){\textcolor{@timetable#7block}{\circle*{\strip@pt\@cornerdiameter}}}
        \addtolength{\@startposy}{\@cornerradius-\@eventheight}
        \addtolength{\@startposx}{\@cornerradius-\@eventwidth}
    }{}

    \setlength{\@eventtextwidth}{\@eventwidth-2\@padding}
    \setlength{\@eventtextheight}{#3\@slotheight-2\@padding}
    \setlength{\@newcolleft}{\@slotwidth*(#1)+\@margin+\@padding}
    \setlength{\@newrowtop}{-#2\@slotheight-\@margin-\@padding}

    % \ifthenelse{\value{@hoursset} = 0}{\setcounter{@printtimestamps}{0}}{}

    % Title (to do: optional text align)
    \put(\strip@pt\@newcolleft,\strip@pt\@newrowtop)
        {\begin{minipage}[t][\@eventtextheight]{\@eventtextwidth}%
            \ifthenelse{\value{@framevalign} = 0}{}{\vspace*{\fill}}%
              \@ttfont\raggedright\color{@timetable#7text}%
                \ifthenelse{\value{@printtimestamps} > 0}%
                  {{\@timestyle \@fmtTime{@startHour}{@startMinute}}%
                    \ifthenelse{\value{@printtimestamps} = 2}%
                      {{\@timestyle -- \@fmtTime{@endHour}{@endMinute}}}%
                      {}%
                  \\}%
                  {}%
                {\@eventstyle \begin{center}#4\end{center}}%
            \ifthenelse{\value{@framevalign} = 1}{}{\vspace*{\fill}}%
         \end{minipage}}

    \renewcommand{\baselinestretch}{0.5}\normalsize
    \setlength{\@newrowtop}{\@startposy+\@padding+\@bottomspace}

    % Lecturer (to do: optional)
    %--------------------------------------------------
    % \put(\strip@pt\@newcolleft,\strip@pt\@newrowtop)
    %     {\begin{minipage}[t]{0.6\@eventtextwidth}%
	%   \@ttfont\raggedright\color{@timetable#7text}{\@bottomstyle #5%
    %         \vphantom{A}}
    %         \ifthenelse{\value{@printtimestamps} = 1}%
    %           {{\@timestyle \@fmtTime{@endHour}{@endMinute}}}%
    %           {}%
    %       \end{minipage}}
    %-------------------------------------------------- 

    \setlength{\@locationwidth}{0.8\@eventtextwidth}
    \setlength{\@newcolleft}{\@startposx + \@eventtextwidth - \@locationwidth}

    % Location (to do: optional)
    \put(\strip@pt\@newcolleft,\strip@pt\@newrowtop)
      {\begin{minipage}[t]{\@locationwidth}%
        \@ttfont\raggedleft\color{@timetable#7text}{\@bottomstyle #6%
          \vphantom{A}}%
      \end{minipage}}

    \renewcommand{\baselinestretch}{1.0}\normalsize
  }

\newcommand{\event}[7]
  {
    % Arguments: {@day}{@start}{@end}{title}{lecturer}{place}{type}

    % Use the time format, if hours are defined, and a slot number otherwise:
    \ifthenelse{\value{@hoursset} > 0}
    {
      \setcounter{@startHour}{#2 / 100}
      \setcounter{@startMinute}{\intcalcMod{#2}{100}}
      \setcounter{@endHour}{#3 / 100}
      \setcounter{@endMinute}{\intcalcMod{#3}{100}}
      
      \setcounter{@hourslot}{(\value{@startHour}-\value{@hourzero})*\value{@slotsperhour} + \value{@startMinute}/\value{@minutesperslot}}
      \setcounter{@durationslots}{(\value{@endHour}-\value{@startHour})*\value{@slotsperhour} + (\value{@endMinute}-\value{@startMinute})/\value{@minutesperslot}}

      % Compensate for 24h wrap
      \ifthenelse{\value{@hourslot} < 0}{\addtocounter{@hourslot}{(24 * (60 / \value{@minutesperslot}))}}{}
    }
    {
      \setcounter{@hourslot}{#2}
      \setcounter{@durationslots}{#3-#2}
    }

    \slotevent{#1-1}{\value{@hourslot}}{\value{@durationslots}}{#4}{#5}{#6}{#7}
  }

\newcommand{\legend}[3]
{
    % Arguments: <horizontal> <vertical> <text>
    % Lets you manually set slot contents (use this really rarely and
    % SEE: \daymark, \timemark )

    \ifthenelse{#1 < 0} {
        \setlength{\@newcolleft}{-\@legendwidth}
        \setlength{\@newcolwidth}{\@legendwidth}
    } {
        \setlength{\@newcolleft}{#1\@slotwidth}
        \setlength{\@newcolwidth}{\@slotwidth}
    }
    \ifthenelse{#2 < 0} {
        \setlength{\@newrowtop}{\@legendheight}
        \setlength{\@newrowheight}{\@legendheight}
    } {
        \setlength{\@newrowtop}{-#2\@slotheight}
        \setlength{\@newrowheight}{\@slotheight*\value{@slotsperhour}}
    }

    \ifthenelse{\value{@hoursset} = 0} {
        \setcounter{@minutesperslot}{60}
    } {}
    
    % Select frame type
    % Lines
    \ifthenelse{#1 < 0}{                        % horizontal lines
        \ifthenelse{\value{@frametype} = 1} {   % legend lines
            \putrule{\@newcolleft}{\@newrowtop}{\@legendwidth}{\@ttlegendgridstrength}{ttlegendcolor2}
        }{                                      % legend stripes (checkerboard)
            \ifthenelse{\intcalcMod{#2}{2*\value{@slotsperhour}} = 0} {
                \putrule{\@newcolleft}{\@newrowtop-\@newrowheight}{\@legendwidth}{\@newrowheight}{ttlegendcolor2}
            } {}
        }
        \ifthenelse{\value{@tthorizgrid} = 1} { % event grid lines
            \putrule{0cm}{\@newrowtop}{\@canvaswidth}{\@ttgridstrength}{ttgridcolor}
        }{}
    }{}
    \ifthenelse{#2 < 0}{                        % vertical lines
        \ifthenelse{\value{@frametype} = 1}{    % legend lines
            \putrule{\@newcolleft}{0cm}{\@ttlegendgridstrength}{\@legendheight}{ttlegendcolor2}
        }{
            \ifthenelse{\intcalcMod{#1}{2} = 0} {
                \putrule{\@newcolleft}{0cm}{\@slotwidth}{\@legendheight}{ttlegendcolor2}
            } {}
        }
        \ifthenelse{\value{@ttvertgrid} = 1} {  % event grid lines
            \putrule{\@newcolleft}{-\@canvasheight}{\@ttgridstrength}{\@canvasheight}{ttgridcolor}
        } { }
    }{}


    % Print text
    {\@ttfont\large                                            %1ex = ugly hack to make it look right (adjust for font height?)
     \putminipage{\@newcolleft+\@padding}{\@newrowtop-\@padding-1ex}{\@newcolwidth-2\@padding}{\@newrowheight-2\@padding}{%
        \ifthenelse{\value{@framevalign} = 0}{}{\vspace*{\fill}} %
         \begin{center}
            \textcolor{ttlegendfontcolor}{#3}
         \end{center}
        \ifthenelse{\value{@framevalign} = 1}{}{\vspace*{\fill}}%
     }
    }
}

\newcommand{\timemark}[1]
{
    \legend {-1} {\value{@timemarks}} {#1}
    \stepcounter{@timemarks}
}

\newcommand{\daymark}[1]
{
    \legend {\value{@daymarks}} {-1} {#1}
    \stepcounter{@daymarks}
}

\newcommand{\defineevent}[7]
{
    \definecolor{@timetable#1block}{rgb}{#2, #3, #4}
    \definecolor{@timetable#1text} {rgb}{#5, #6, #7}
}

\newcommand{\setslotsize}[2]
{
    % Arguments: <width> <height>
    \setlength{\@slotwidth}{#1}
    \setlength{\@slotheight}{#2}
}

\newcommand{\setslotcount}[2]
{
    % Arguments: <days> <hours per day>
    \setcounter{@colcount}{#1}
    \setcounter{@rowcount}{#2}
}


\newcommand{\hours}[3]
{
    % Arguments: <start hour> <minute stepping> <print end time?>
    % Automatically sets the time slots to full hours, beginning with <start hour>
    \setcounter{@hoursset}{1}
    \setcounter{@hourzero}{#1}
    \setcounter{@minutesperslot}{#2}
    \setcounter{@slotsperhour}{60 / \calcgcd{60}{#2}}

    \setcounter{@hour}{#1}
    \setcounter{@minute}{0}
    \@ttforloop{@row}{0}{\value{@row} < \value{@rowcount}}
    {
        \ifthenelse{\value{@minute} = 0} {
            \timemark{\@fmtTime{@hour}{@minute}\ifthenelse{#3 > 0}{-\setcounter{@hour}{\value{@hour}+1}\@fmtTime{@hour}{@minute}\setcounter{@hour}{\value{@hour}-1}}{}}
        } {
            \stepcounter{@timemarks}
        }
        \addtocounter{@minute}{#2}
        \ifthenelse{\value{@minute} < 60} {
        } {
            \stepcounter{@hour}
            \setcounter{@minute}{0}
        }	
        \ifthenelse{\value{@hour} > 23}{
            \addtocounter{@hour}{-24}
        } { }
    }
}

\newcommand{\englishdays}[1]
{
    % Arguments: <number of start day>
    \setcounter{@day}{#1}
    \@ttforloop{@column}{0}{\value{@column} < \value{@colcount}}
    {
        \ifthenelse{\equal{\value{@day}}1}{\daymark{Monday}}{}
        \ifthenelse{\equal{\value{@day}}2}{\daymark{Tuesday}}{}
        \ifthenelse{\equal{\value{@day}}3}{\daymark{Wednesday}}{}
        \ifthenelse{\equal{\value{@day}}4}{\daymark{Thursday}}{}
        \ifthenelse{\equal{\value{@day}}5}{\daymark{Friday}}{}
        \ifthenelse{\equal{\value{@day}}6}{\daymark{Saturday}}{}
        \ifthenelse{\equal{\value{@day}}7}{\daymark{Sunday}}{}
        \stepcounter{@day}
        \ifthenelse{\value{@day} > 7}{\addtocounter{@day}{-7}}{}
    }
}

\newcommand{\germandays}[1]
{
    % Arguments: <number of start day>
    \setcounter{@day}{#1}
    \@ttforloop{@column}{0}{\value{@column} < \value{@colcount}}
    {
        \ifthenelse{\equal{\value{@day}}1}{\daymark{Montag}}{}
        \ifthenelse{\equal{\value{@day}}2}{\daymark{Dienstag}}{}
        \ifthenelse{\equal{\value{@day}}3}{\daymark{Mittwoch}}{}
        \ifthenelse{\equal{\value{@day}}4}{\daymark{Donnerstag}}{}
        \ifthenelse{\equal{\value{@day}}5}{\daymark{Freitag}}{}
        \ifthenelse{\equal{\value{@day}}6}{\daymark{Samstag}}{}
        \ifthenelse{\equal{\value{@day}}7}{\daymark{Sonntag}}{}
        \stepcounter{@day}
        \ifthenelse{\value{@day} > 7}{\addtocounter{@day}{-7}}{}
    }
}

\newenvironment{timetable}%
{\noindent%
    % Arguments: None
    % Starts a new timetable
    %
    % Set the new layout setting
    \setlength{\@canvaswidth}{\@slotwidth*\value{@colcount}}%
    \setlength{\@canvasheight}{\@slotheight*\value{@rowcount}}%
    \setlength{\@totalwidth}{\@canvaswidth+\@legendwidth}%
    \setlength{\@totalheight}{\@canvasheight+\@legendheight}%
    %
    % Reset the counters
    \setcounter{@timemarks}{0}%
    \setcounter{@daymarks}{0}%
    %
    % Minipage to correct bounding box
    \begin{minipage}[t][\@totalheight]{\@totalwidth}

    % Begin. Note the offset hack of the picture
        \begin{picture}(\strip@pt\@totalwidth,\strip@pt\@totalheight)(-\strip@pt\@legendwidth,-\strip@pt\@canvasheight)
        % Draw the legend background
        \putrule{-\@legendwidth}{-\@canvasheight}{\@legendwidth}{\@totalheight}{ttlegendcolor}     % left bar
        \putrule{           0cm}{            0cm}{\@canvaswidth}{\@legendheight}{ttlegendcolor}    % top bar
}
{
        % Draw the contours (frame borders)
        % Inner
        \putrule{0cm}{-\@canvasheight}{\@innerborderstrength}{\@canvasheight}{ttinnerbordercolor}     % left border
        \putrule{0cm}{            0cm}{\@canvaswidth}{\@innerborderstrength}{ttinnerbordercolor}      % top border

        % Outer
        \putrule{-\@legendwidth}{\@legendheight}{\@totalwidth}{\@outerborderstrength}{ttouterbordercolor}  % top
        \putrule{-\@legendwidth}{-\@canvasheight}{\@outerborderstrength}{\@totalheight}{ttouterbordercolor}% left
        \putrule{\@canvaswidth}{-\@canvasheight}{\@outerborderstrength}{\@totalheight}{ttouterbordercolor} % right
        \putrule{-\@legendwidth}{-\@canvasheight}{\@totalwidth}{\@outerborderstrength}{ttouterbordercolor} % bottom
        \end{picture}

    \end{minipage}
}



%--------------------------------------------------
% other algorithms
%-------------------------------------------------- 

% Simple for loop construct as proposed by N. Setzer
\newcommand{\@ttforloop}[5][1]
{
    % Arguments:  [step]{counter}{startvalue}{condition}{loop body}
    \setcounter{#2}{#3}
    \ifthenelse{#4}
    {
        #5
        \addtocounter{#2}{#1}
        \@ttforloop[#1]{#2}{\value{#2}}{#4}{#5}
    }
    {}
}
\def\calcgcd#1#2{%
    \ifnum#2>0 \calcgcd{#2}{\intcalcMod{#1}{#2}}\else#1\fi
}


\newlength{\@puthelpx}
\newlength{\@puthelpy}
\def\easyput#1#2#3{% x,y, content
    \setlength{\@puthelpx}{#1}%
    \setlength{\@puthelpy}{#2}%
    \put(\strip@pt\@puthelpx,\strip@pt\@puthelpy){#3}%
}

\def\putrule#1#2#3#4#5{% x,y,  width,height, color
    \easyput{#1}{#2}{\textcolor{#5}{\rule{#3}{#4}}}%
}

\def\putminipage#1#2#3#4#5{% x,y, w,h, content
    \easyput{#1}{#2}{%
        \begin{minipage}[t][#4]{#3}%
            #5%
        \end{minipage}%
    }%
}

